{"version":3,"sources":["panels/Home.js","App.js","index.js"],"names":["Home","id","location","fetchedUser","className","defaultState","center","parseFloat","zoom","geometry","options","preset","style","backgroundImage","height","display","alignItems","justifyContent","paddingBottom","borderRadius","photos","color","App","useState","activePanel","setUser","setLocation","size","popout","setPopout","setEvents","useEffect","a","connect","sendPromise","user","subscribe","detail","type","data","schemeAttribute","document","createAttribute","value","scheme","body","attributes","setNamedItem","fetchData","console","log","then","lat","long","catch","error","send","ReactDOM","render","getElementById"],"mappings":"0nBA4DeA,G,OAjDF,SAAC,GAAD,IAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,SAAP,EAAiBC,YAAjB,OACX,kBAAC,IAAD,CAAOF,GAAIA,GACT,kBAAC,IAAD,kFACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKG,UAAU,MAAMC,aAAc,CAACC,OAAQ,CAACC,WAAWL,EAAS,IACpBK,WAAWL,EAAS,KAC7BM,KAAM,IACxC,kBAAC,IAAD,CACEC,SAAU,CAACF,WAAWL,EAAS,IAAKK,WAAWL,EAAS,KACxDQ,QAAS,CAACC,OAAQ,+BAGtB,kBAAC,IAAD,CAAKP,UAAU,oBACb,yBAAKQ,MAAO,CACVC,gBAAiB,oDACjBC,OAAQ,IACRC,QAAS,OACTC,WAAY,WACZC,eAAgB,SAChBC,cAAe,MACfC,aAAc,KAEd,kBAAC,IAAD,CACEC,OAAQ,CACN,6EACA,4EACA,8EAEFR,MAAO,CAAES,MAAO,SAChBd,WAAWL,EAAS,IAPtB,MAO8BK,WAAWL,EAAS,IAPlD,kBCiCKoB,EA1DH,WAAO,IAAD,EACsBC,mBAAS,QAD/B,mBACTC,EADS,aAEeD,mBAAS,OAFxB,mBAETpB,EAFS,KAEIsB,EAFJ,OAGgBF,mBAAS,CAAC,OAAQ,SAHlC,mBAGTrB,EAHS,KAGCwB,EAHD,OAIYH,mBAAS,kBAAC,IAAD,CAAeI,KAAK,WAJzC,mBAITC,EAJS,KAIDC,EAJC,OAKYN,mBAAS,IALrB,mBAKDO,GALC,WAoBhBC,qBAAU,WAAM,4CASd,4BAAAC,EAAA,sEACqBC,IAAQC,YAAY,uBADzC,OACQC,EADR,OAEEV,EAAQU,GACRN,EAAU,MAHZ,4CATc,sBACdI,IAAQG,WAAU,YAAgC,IAAD,IAA5BC,OAAUC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,KACnC,GAAa,yBAATD,EAAiC,CACnC,IAAME,EAAkBC,SAASC,gBAAgB,UACjDF,EAAgBG,MAAQJ,EAAKK,OAASL,EAAKK,OAAS,eACpDH,SAASI,KAAKC,WAAWC,aAAaP,OAG1CX,EAAU,MARI,mCAcdmB,GA1BAC,QAAQC,IAAIhD,GACZ+B,IACGC,YAAY,sBACZiB,MAAK,SAAAZ,GACJb,EAAY,CAACa,EAAKa,IAAKb,EAAKc,OAC5BJ,QAAQC,IAAI,WAAYhD,MAEzBoD,OAAM,SAAAC,GACLN,QAAQC,IAAI,QAASK,MAqBzBzB,EAAU,CACR,CACE,OAAU,CAAC,WAAY,YACvB,KAAQ,uEACR,YAAe,wFAIlB,IAMH,OACE,kBAAC,IAAD,CAAMN,YAAaA,EAAaI,OAAQA,GACtC,kBAAC,EAAD,CAAM3B,GAAG,OAAOC,SAAUA,EAAUC,YAAaA,MCpDvD8B,IAAQuB,KAAK,gBAQbC,IAASC,OAAO,kBAAC,EAAD,MAASjB,SAASkB,eAAe,U","file":"static/js/main.9286d934.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport UsersStack from '@vkontakte/vkui/dist/components/UsersStack/UsersStack';\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\n\nimport { YMaps, Map, Placemark } from 'react-yandex-maps';\n\nimport './Home.css';\n\nconst Home = ({ id, location, fetchedUser }) => (\n  <Panel id={id}>\n    <PanelHeader>Карта событий</PanelHeader>\n    <YMaps>\n      <Map className=\"map\" defaultState={{center: [parseFloat(location[0]),\n                                                   parseFloat(location[1])], \n                                          zoom: 9}}>\n        <Placemark\n          geometry={[parseFloat(location[0]), parseFloat(location[1])]}\n          options={{preset: 'islands#redCircleDotIcon'}}\n        />\n      </Map>\n      <Div className=\"event-short-info\">\n        <div style={{\n          backgroundImage: 'linear-gradient(135deg, #f24973 0%, #3948e6 100%)',\n          height: 200,\n          display: 'flex',\n          alignItems: 'flex-end',\n          justifyContent: 'center',\n          paddingBottom: '6px',\n          borderRadius: 12\n        }}>\n          <UsersStack\n            photos={[\n              'https://sun9-19.userapi.com/c851232/v851232757/fb949/4rDdDHqGglQ.jpg?ava=1',\n              'https://sun9-3.userapi.com/c851536/v851536176/a9b1d/xdPOltpVQRI.jpg?ava=1',\n              'https://sun9-21.userapi.com/c851416/v851416327/be840/bnUHAblZoBY.jpg?ava=1'\n            ]}\n            style={{ color: \"#fff\" }}\n          >{parseFloat(location[0])} - {parseFloat(location[1])} - 14:50</UsersStack>\n        </div>\n      </Div>\n    </YMaps>\n  </Panel>\n);\n\nHome.propTypes = {\n  id: PropTypes.string.isRequired,\n  location: PropTypes.array.isRequired,\n  fetchedUser: PropTypes.shape({\n    photo_200: PropTypes.string,\n    first_name: PropTypes.string,\n    last_name: PropTypes.string,\n    city: PropTypes.shape({\n      title: PropTypes.string,\n    }),\n  }),\n};\n\nexport default Home;","import React, { useState, useEffect } from 'react';\nimport connect from '@vkontakte/vk-connect';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\n\nconst App = () => {\n  const [activePanel, setActivePanel] = useState('home');\n  const [fetchedUser, setUser] = useState(null);\n  const [location, setLocation] = useState([55.798, 49.106]);\n  const [popout, setPopout] = useState(<ScreenSpinner size='large' />);\n  const [events, setEvents] = useState([]);\n  \n  const fetchLocation = () => {\n    console.log(location)\n    connect\n      .sendPromise('VKWebAppGetGeodata')\n      .then(data => {\n        setLocation([data.lat, data.long])\n        console.log('location', location)\n      })\n      .catch(error => {\n        console.log('error', error)\n      });\n  }\n\n  useEffect(() => {\n    connect.subscribe(({ detail: { type, data }}) => {\n      if (type === 'VKWebAppUpdateConfig') {\n        const schemeAttribute = document.createAttribute('scheme');\n        schemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n        document.body.attributes.setNamedItem(schemeAttribute);\n      }\n    });\n    setPopout(null);\n    async function fetchData() {\n      const user = await connect.sendPromise('VKWebAppGetUserInfo');\n      setUser(user);\n      setPopout(null);\n    }\n    fetchData();\n    fetchLocation();\n\n    setEvents([\n      {\n        'coords': [55.6105863, 49.2864581],\n        'name': 'Мероприятие 1',\n        'description': 'Уехать в Москву'\n      }\n    ]);\n\n  }, []);\n\n  const go = e => {\n    setActivePanel(e.currentTarget.dataset.to);\n  };\n\n  return (\n    <View activePanel={activePanel} popout={popout}>\n      <Home id='home' location={location} fetchedUser={fetchedUser}/>\n    </View>\n  );\n}\n\nexport default App;\n","import 'core-js/features/map';\nimport 'core-js/features/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vk-connect';\nimport App from './App';\n// import registerServiceWorker from './sw';\n\n// Init VK  Mini App\nconnect.send('VKWebAppInit');\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT\n// registerServiceWorker();\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}