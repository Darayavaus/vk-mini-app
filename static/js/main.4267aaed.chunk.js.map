{"version":3,"sources":["panels/Home.js","App.js","index.js"],"names":["Home","id","go","fetchedUser","className","defaultState","center","zoom","geometry","App","useState","activePanel","setActivePanel","setUser","location","setLocation","size","popout","setPopout","useEffect","a","connect","sendPromise","user","send","subscribe","detail","type","data","schemeAttribute","document","createAttribute","value","scheme","body","attributes","setNamedItem","fetchData","then","lat","lon","console","log","catch","error","e","currentTarget","dataset","to","ReactDOM","render","getElementById"],"mappings":"ukBAwCeA,G,OAjCF,SAAC,GAAD,IAAGC,EAAH,EAAGA,GAAH,EAAOC,GAAP,EAAWC,YAAX,OACZ,kBAAC,IAAD,CAAOF,GAAIA,GAWJ,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAKG,UAAU,MAAMC,aAAc,CAAEC,OAAQ,CAAC,MAAO,OAAQC,KAAM,IAC/D,kBAAC,IAAD,CAAWC,SAAU,CAAC,MAAO,cCoC9BC,EAjDH,WAAO,IAAD,EACsBC,mBAAS,QAD/B,mBACTC,EADS,KACIC,EADJ,OAEeF,mBAAS,MAFxB,mBAETP,EAFS,KAEIU,EAFJ,OAGgBH,mBAAS,CAAC,OAAQ,SAHlC,mBAGTI,EAHS,KAGCC,EAHD,OAIYL,mBAAS,kBAAC,IAAD,CAAeM,KAAK,WAJzC,mBAITC,EAJS,KAIDC,EAJC,KAkBhBC,qBAAU,WAAM,4CASd,4BAAAC,EAAA,sEACqBC,IAAQC,YAAY,uBADzC,cACQC,EADR,gBAEoBF,IAAQG,OAF5B,cAGEX,EAAQU,GACRL,EAAU,MAJZ,4CATc,sBACdG,IAAQI,WAAU,YAAgC,IAAD,IAA5BC,OAAUC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,KACnC,GAAa,yBAATD,EAAiC,CACnC,IAAME,EAAkBC,SAASC,gBAAgB,UACjDF,EAAgBG,MAAQJ,EAAKK,OAASL,EAAKK,OAAS,eACpDH,SAASI,KAAKC,WAAWC,aAAaP,OAG1CX,EAAU,MARI,mCAedmB,GA1BAhB,IACGC,YAAY,sBACZgB,MAAK,SAAAV,GACJb,EAAY,CAACa,EAAKW,IAAKX,EAAKY,MAC5BC,QAAQC,IAAI,WAAY5B,MAEzB6B,OAAM,SAAAC,GACLH,QAAQC,IAAI,QAASE,QAsBxB,IAMH,OACE,kBAAC,IAAD,CAAMjC,YAAaA,EAAaM,OAAQA,GACtC,kBAAC,EAAD,CAAMhB,GAAG,OAAOE,YAAaA,EAAaD,GANnC,SAAA2C,GACTjC,EAAeiC,EAAEC,cAAcC,QAAQC,SCtC3C3B,IAAQG,KAAK,gBAQbyB,IAASC,OAAO,kBAAC,EAAD,MAASpB,SAASqB,eAAe,U","file":"static/js/main.4267aaed.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport { YMaps, Map, Placemark } from 'react-yandex-maps';\n\nimport './Home.css';\n\nconst Home = ({ id, go, fetchedUser }) => (\n\t<Panel id={id}>\n\t\t{/* {fetchedUser &&\n\t\t<Group title=\"User Data Fetched with VK Connect\">\n\t\t\t<Cell\n\t\t\t\tbefore={fetchedUser.photo_200 ? <Avatar src={fetchedUser.photo_200}/> : null}\n\t\t\t\tdescription={fetchedUser.city && fetchedUser.city.title ? fetchedUser.city.title : ''}\n\t\t\t>\n\t\t\t\t{`${fetchedUser.first_name} ${fetchedUser.last_name}`}\n\t\t\t</Cell>\n\t\t</Group>} */}\n\n        <YMaps>\n            <Map className=\"map\" defaultState={{ center: [55.75, 37.57], zoom: 9 }}>\n                <Placemark geometry={[55.75, 37.57]} />\n            </Map>\n        </YMaps>\t\n\t</Panel>\n);\n\nHome.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n\tfetchedUser: PropTypes.shape({\n\t\tphoto_200: PropTypes.string,\n\t\tfirst_name: PropTypes.string,\n\t\tlast_name: PropTypes.string,\n\t\tcity: PropTypes.shape({\n\t\t\ttitle: PropTypes.string,\n\t\t}),\n\t}),\n};\n\nexport default Home;","import React, { useState, useEffect } from 'react';\nimport connect from '@vkontakte/vk-connect';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\n\nconst App = () => {\n  const [activePanel, setActivePanel] = useState('home');\n  const [fetchedUser, setUser] = useState(null);\n  const [location, setLocation] = useState([55.798, 49.106]);\n  const [popout, setPopout] = useState(<ScreenSpinner size='large' />);\n  \n  const fetchLocation = () => {\n    connect\n      .sendPromise('VKWebAppGetGeodata')\n      .then(data => {\n        setLocation([data.lat, data.lon])\n        console.log('location', location)\n      })\n      .catch(error => {\n        console.log('error', error)\n      });\n  }\n\n  useEffect(() => {\n    connect.subscribe(({ detail: { type, data }}) => {\n      if (type === 'VKWebAppUpdateConfig') {\n        const schemeAttribute = document.createAttribute('scheme');\n        schemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n        document.body.attributes.setNamedItem(schemeAttribute);\n      }\n    });\n    setPopout(null);\n    async function fetchData() {\n      const user = await connect.sendPromise('VKWebAppGetUserInfo');\n      const loc = await connect.send()\n      setUser(user);\n      setPopout(null);\n    }\n    fetchData();\n    fetchLocation();\n\n  }, []);\n\n  const go = e => {\n    setActivePanel(e.currentTarget.dataset.to);\n  };\n\n  return (\n    <View activePanel={activePanel} popout={popout}>\n      <Home id='home' fetchedUser={fetchedUser} go={go} />\n    </View>\n  );\n}\n\nexport default App;\n","import 'core-js/features/map';\nimport 'core-js/features/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vk-connect';\nimport App from './App';\n// import registerServiceWorker from './sw';\n\n// Init VK  Mini App\nconnect.send('VKWebAppInit');\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT\n// registerServiceWorker();\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}