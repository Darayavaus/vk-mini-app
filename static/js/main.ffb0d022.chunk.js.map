{"version":3,"sources":["panels/Modal.js","panels/Home.js","App.js","index.js"],"names":["Modal","props","state","group_count","modalHistory","console","log","modalBack","setActiveModal","length","onClose","joinAndClose","onJoin","activeModal","this","indexOf","splice","push","setState","id","header","left","IS_PLATFORM_ANDROID","onClick","right","IS_PLATFORM_IOS","event","title","start","end","multiline","aim","inGroup","size","level","disabled","photos","userIcons","groupCount","count_end","value","Math","floor","className","type","requirements","map","req","key","toString","selected","before","src","groupCover","organizer","React","Component","Home","location","fetchedUser","events","token","emptyEvent","useState","currentEvent","setCurrentEvent","setGroupCount","setInGroup","setGroupCover","setUserIcons","getGroupMembers","group_id","params","v","access_token","parseInt","connect","sendPromise","then","data","response","count","items","includes","user_ids","fields","u","photo_50","catch","error","getUsersPhotos","handleEventClick","getCover","listEvents","e","idx","geometry","coords","options","preset","icon_type","defaultState","center","parseFloat","zoom","onAllow","App","activePanel","setUser","setLocation","popout","setPopout","setEvents","setToken","useEffect","a","user","subscribe","detail","schemeAttribute","document","createAttribute","scheme","body","attributes","setNamedItem","fetchData","available","lat","long","send","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.ffb0d022.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport connect from '@vkontakte/vk-connect';\nimport PropTypes from 'prop-types';\n\nimport {\n  UsersStack,\n  ModalRoot,\n  ModalPage,\n  ModalPageHeader,\n  HeaderButton,\n  List,\n  Cell,\n  Div,\n  Button,\n  InfoRow,\n  Progress,\n  Avatar,\n  Tabs,\n  TabsItem,\n  HorizontalScroll,\n  IS_PLATFORM_ANDROID,\n  IS_PLATFORM_IOS\n} from '@vkontakte/vkui';\n\nimport Icon24Cancel from '@vkontakte/icons/dist/24/cancel';\nimport Icon24Dismiss from '@vkontakte/icons/dist/24/dismiss';\n\nclass Modal extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      group_count: 0,\n      modalHistory: []\n    };\n    console.log('props:', this.props)\n    this.modalBack = () => {\n      this.setActiveModal(this.state.modalHistory[this.state.modalHistory.length - 2]);\n      console.log('closing!')\n      this.props.onClose()\n    };\n\n    this.joinAndClose = () => {\n      this.props.onClose()\n      this.props.onJoin()\n      // this.props.onAllow()\n    }\n  }\n\n  setActiveModal(activeModal) {\n    activeModal = activeModal || null;\n    let modalHistory = this.state.modalHistory ? [...this.state.modalHistory] : [];\n\n    if (activeModal === null) {\n      modalHistory = [];\n    } else if (modalHistory.indexOf(activeModal) !== -1) {\n      modalHistory = modalHistory.splice(0, modalHistory.indexOf(activeModal) + 1);\n    } else {\n      modalHistory.push(activeModal);\n    }\n\n    this.setState({\n      // activeModal,\n      modalHistory\n    });\n  };\n\n  render() {\n    return (\n      <ModalRoot\n        id='modal-1'\n        activeModal={this.props.activeModal}\n      >\n        <ModalPage\n          id='modal-page-1'\n          header={\n            <ModalPageHeader\n              left={IS_PLATFORM_ANDROID && <HeaderButton onClick={this.modalBack}><Icon24Cancel /></HeaderButton>}\n              right={IS_PLATFORM_IOS && <HeaderButton onClick={this.modalBack}><Icon24Dismiss /></HeaderButton>}\n            >\n              {this.props.event.title}\n            </ModalPageHeader>\n          }\n          onClose={this.modalBack}\n        >\n        <List>\n          <Cell>\n            <InfoRow title=\"Когда?\">\n              {this.props.event.start} - {this.props.event.end}\n            </InfoRow>\n          </Cell>\n          <Cell multiline>\n            <InfoRow title=\"Что там делать?\">\n              {this.props.event.aim}\n            </InfoRow>\n          </Cell>\n          <Cell>\n            <Div>\n              {\n                this.props.inGroup\n                ? <Button size=\"xl\" level=\"secondary\" disabled>Уже участвую!</Button>\n                : <Button size=\"xl\" onClick={this.joinAndClose}>Готов помочь!</Button>\n              }\n            </Div>\n          </Cell>\n          <Cell>\n            <UsersStack\n              photos={this.props.userIcons}\n              size=\"m\"\n            >Идут еще {this.props.groupCount} человек</UsersStack>\n          </Cell>\n          <Cell>\n            <InfoRow title={'Набрано участников: ' + this.props.groupCount + ' из ' + this.props.event.count_end}>\n              <Progress \n                value={Math.floor(this.props.groupCount * 100 / this.props.event.count_end)}\n                className=\"progress-bar\"\n              />\n            </InfoRow>\n          </Cell>\n          <Cell>\n            <InfoRow title=\"Нужные навыки\">\n              <Tabs type=\"buttons\">\n                <HorizontalScroll>\n                    {this.props.event.requirements.map((req) => \n                      <TabsItem key={req.toString()} selected={true}>{req}</TabsItem>\n                    )}\n                </HorizontalScroll>\n              </Tabs>\n            </InfoRow>\n          </Cell>\n          <Cell before={<Avatar src={this.props.groupCover} />}>\n            <InfoRow title=\"Организатор\">\n              {this.props.event.organizer}\n            </InfoRow>\n          </Cell>\n        </List>\n      </ModalPage>\n    </ModalRoot>\n    );\n  }\n}\n\nexport default Modal;\n","import React, { useState, useEffect } from 'react';\nimport connect from '@vkontakte/vk-connect';\nimport PropTypes from 'prop-types';\n\nimport {\n  YMaps,\n  Map,\n  Placemark\n} from 'react-yandex-maps';\n\nimport Modal from './Modal';\n\nimport './Home.css';\n\nconst Home = ({ id, location, fetchedUser, events, token }) => {\n\n  const emptyEvent = {\n    'coords': [1, 1],\n    'title': 'Пусто',\n    'organizer': 'Пусто',\n    'start': 'Пусто',\n    'end': 'Пусто',\n    'aim': 'Пусто',\n    'description': 'Пусто',\n    'requirements': [],\n    'icon_type': 'islands#blueZooIcon',\n    'reward': '',\n    'photo': 'botsad.svg',\n    'group_id': '1',\n    'count_cur': 1,\n    'count_end': 1\n  }\n\n  const [currentEvent, setCurrentEvent] = useState(\n    {\n      event: emptyEvent,\n      activeModal: null\n    }\n  );\n  const [groupCount, setGroupCount] = useState(0)\n  const [inGroup, setInGroup] = useState(false)\n  const [groupCover, setGroupCover] = useState('')\n  const [userIcons, setUserIcons] = useState([])\n\n\n  const allowGroup = () => {\n    connect\n      .sendPromise(\"VKWebAppAllowMessagesFromGroup\", {\"group_id\": parseInt(currentEvent.event.group_id)})\n      .then(data => {\n        console.log('data', data)\n      })\n      .catch(error => {\n        console.log('error in allow group', error)\n      });\n  }\n\n  const joinGroup = () => {\n    connect\n      .sendPromise(\"VKWebAppJoinGroup\", {\"group_id\": parseInt(currentEvent.event.group_id)})\n      .then(data => {\n        console.log('data', data)\n      })\n      .catch(error => {\n        console.log('error IN JOIN GROUP', error)\n      });\n  }\n\n  const getCover = (group_id) => {\n    let params = {\n      v: '5.101',\n      access_token: token,\n      group_id: parseInt(group_id),\n      fields: \"cover\"\n    }\n\n    connect\n      .sendPromise(\"VKWebAppCallAPIMethod\", {\"method\": \"groups.getById\", \n                                             \"params\": params})\n      .then(data => {\n        console.log('cover:', data.response[0].photo_50)\n        setGroupCover(data.response[0].photo_50)\n      })\n      .catch(error => {\n        console.log('error in get cover', error)\n      });\n  }\n\n  const getUsersPhotos = (user_ids) => {\n    let params = {\n      v: '5.101',\n      access_token: token,\n      user_ids: user_ids,\n      fields: 'photo_50'\n    }\n\n    connect\n      .sendPromise(\"VKWebAppCallAPIMethod\", {\"method\": \"users.get\", \n                                             \"params\": params})\n      .then(data => {\n        console.log('response:', data)\n        console.log('cover:', data.response.map((u)=>(u.photo_50)))\n        setUserIcons(data.response.map((u)=>(u.photo_50)))\n      })\n      .catch(error => {\n        console.log('error in get cover', error)\n      });\n  }\n\n  const getGroupMembers = (group_id) => {\n    let params = {\n      v: '5.101',\n      access_token: token,\n      group_id: parseInt(group_id)\n    }\n    connect\n      .sendPromise(\"VKWebAppCallAPIMethod\", {\"method\": \"groups.getMembers\", \n                                            \"params\": params})\n      .then(data => {\n        console.log('group count:', data.response.count)\n        console.log('items', data.response.items)\n        if (data.response.items.includes(fetchedUser.id)) {\n          console.log('user in group')\n          setInGroup(true)\n        } else {\n          console.log('USER IS NOT IN GROUP')\n          setInGroup(false)\n        }\n        setGroupCount(data.response.count)\n        getUsersPhotos(data.response.items)\n      })\n      .catch(error => {\n        console.log('error in get group members', error)\n      });\n  }\n\n\n  const handleEventClick = (event) => {\n    // joinGroup(group_id)\n    getGroupMembers(event.group_id)\n    getCover(event.group_id)\n    console.log('clicked')\n    setCurrentEvent(\n      {\n        event: event,\n        activeModal: 'modal-page-1'\n      }\n    )\n    console.log('event:', currentEvent)\n  }\n\n  const listEvents = events.map((e, idx) =>\n    <Placemark\n      key={'event-' + idx}\n      geometry={e.coords}\n      options={{preset: e.icon_type}}\n      onClick={() => handleEventClick(e)}\n    />\n  );\n\n  const onCloseModal = () => {\n    setCurrentEvent(\n      {\n        event: emptyEvent,\n        activeModal: null,\n      }\n    )\n    setGroupCount(0)\n    setInGroup(false)\n  }\n\n  return (\n    <div id={id} className=\"main\">\n      <YMaps>\n        <Map className=\"map\"\n          defaultState={\n            {center: [\n              parseFloat(location[0]),\n              parseFloat(location[1])\n            ],\n            zoom: 10}\n          }\n        >\n          <Placemark\n            geometry={[parseFloat(location[0]), parseFloat(location[1])]}\n            options={{preset: 'islands#redCircleDotIcon'}}\n          />\n          {listEvents}\n        </Map>\n      </YMaps>\n      <Modal\n        event={currentEvent.event}\n        activeModal={currentEvent.activeModal}\n        onClose={onCloseModal}\n        groupCount={groupCount}\n        onJoin={joinGroup}\n        inGroup={inGroup}\n        groupCover={groupCover}\n        userIcons={userIcons}\n        onAllow={allowGroup}\n      />\n    </div>\n  );\n}\n\nexport default Home;\n","import React, { useState, useEffect } from 'react';\nimport connect from '@vkontakte/vk-connect';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\n\nconst App = () => {\n  const [activePanel, setActivePanel] = useState('home');\n  const [fetchedUser, setUser] = useState(null);\n  const [location, setLocation] = useState([55.798, 49.106]);\n  const [popout, setPopout] = useState(<ScreenSpinner size='large' />);\n  const [events, setEvents] = useState([]);\n  const [token, setToken] = useState('');\n  \n  const fetchLocation = () => {\n    console.log(location)\n    connect\n      .sendPromise('VKWebAppGetGeodata')\n      .then(data => {\n        if (data.available == 1) {\n          console.log('accessed user location!')\n          setLocation([data.lat, data.long])\n        }\n        console.log('location', location)\n      })\n      .catch(error => {\n        console.log('error', error)\n      });\n  }\n\n  const getToken = () => {\n    connect\n      .sendPromise(\"VKWebAppGetAuthToken\",\n        {\n          \"app_id\": 7149958,\n          \"scope\": \"friends,groups\"\n        }\n      )\n      .then(data=> {\n        console.log(data)\n        if (\"error_data\" in data) {\n          console.log('could not fetch token :(')\n        } else {\n          setToken(data.access_token)\n          console.log('fetched token!')\n        }\n      })\n      .catch(error => {\n        console.log('error', error)\n      })\n  }\n\n  useEffect(() => {\n    connect.subscribe(({ detail: { type, data }}) => {\n      if (type === 'VKWebAppUpdateConfig') {\n        const schemeAttribute = document.createAttribute('scheme');\n        schemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n        document.body.attributes.setNamedItem(schemeAttribute);\n      }\n    });\n    setPopout(null);\n    async function fetchData() {\n      const user = await connect.sendPromise('VKWebAppGetUserInfo');\n      setUser(user);\n      setPopout(null);\n    }\n    fetchData();\n    fetchLocation();\n    getToken();\n\n    setEvents([\n      {\n        'coords': [55.766059, 49.1308083],\n        'title': 'Помочь зооботсаду',\n        'organizer': 'Казанский зооботанический сад',\n        'start': '2019-10-05 09:00',\n        'end': '2019-10-05 13:00',\n        'aim': 'Содействие в поддержании благополучия экспонируемых животных',\n        'description': 'Необходима помощь во время сезонных работ, помощь посетителям в ориентировании на территории, консультирование',\n        'requirements': ['Хорошо знать территорию зооботсада', 'Готовность выполнять любую из перечисленных задач'],\n        'icon_type': 'islands#blueZooIcon',\n        'reward': 'Бесплатное посещение экскурсий, а также памятные сувениры',\n        'photo': 'botsad.svg',\n        'group_id': '187013907',\n        'count_cur': 34,\n        'count_end': 50\n      },\n      {\n        'coords': [55.821002, 49.1586594],\n        'title': 'Помочь с техникой',\n        'organizer': 'Казань Арена',\n        'start': '2019-10-06 10:00',\n        'end': '2019-10-06 16:00',\n        'aim': 'Успешное проведение спортивного мероприятия',\n        'description': 'Необходима помощь волонтеров в организации обеспечения коммуникаций и телерадиовещания',\n        'requirements': ['Возраст от 18 лет', 'Опыт волонтерской работы на спортивных мероприятиях'],\n        'icon_type': 'islands#blueRunIcon',\n        'reward': 'Бесплатное посещение матча',\n        'photo': 'kazan-arena.svg',\n        'group_id': '187023316',\n        'count_cur': 27,\n        'count_end': 100\n      },\n      {\n        'coords': [55.6122512, 49.2959574],\n        'title': 'Прибрать за собой',\n        'organizer': 'Цифровой Прорыв',\n        'start': '2019-09-29 16:00',\n        'end': '2019-09-29 21:00',\n        'aim': 'Помочь и отбрагодарить организаторов хакатона',\n        'description': 'Требуется провести уборку на своем рабочем месте после завершения хакатона',\n        'requirements': ['Умение работать в команде'],\n        'icon_type': 'islands#blueStarIcon',\n        'reward': 'Благодарность',\n        'photo': 'cp.svg',\n        'group_id': '187024041',\n        'count_cur': 3250,\n        'count_end': 3300\n      },\n      {\n        'coords': [55.791230, 49.102772],\n        'title': 'Отпраздновать победу',\n        'organizer': 'Фонд побед',\n        'start': '2019-09-29 21:00',\n        'end': '2019-09-29 23:00',\n        'aim': 'Весело провести время',\n        'description': 'Необходимо отдохнуть и поздравить победителей',\n        'requirements': ['Умение работать в команде'],\n        'icon_type': 'islands#blueFoodIcon',\n        'reward': 'Вы перестанете чувствовать усталость',\n        'photo': 'bar.svg',\n        'group_id': '187028879',\n        'count_cur': 3,\n        'count_end': 100\n      }\n    ]);\n\n    console.log('00:05')\n\n  }, []);\n\n  return (\n    <View activePanel={activePanel} popout={popout}>\n      <Home id='home' \n            location={location} \n            fetchedUser={fetchedUser} \n            events={events}\n            token={token}/>\n    </View>\n  );\n}\n\nexport default App;\n","import 'core-js/features/map';\nimport 'core-js/features/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vk-connect';\nimport App from './App';\n// import registerServiceWorker from './sw';\n\n// Init VK  Mini App\nconnect.send('VKWebAppInit');\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT\n// registerServiceWorker();\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}