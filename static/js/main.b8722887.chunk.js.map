{"version":3,"sources":["panels/Modal.js","panels/Home.js","App.js","index.js"],"names":["Modal","props","handleClick","console","log","state","activeModal","modalHistory","modalBack","setActiveModal","length","this","indexOf","splice","push","setState","id","header","left","IS_PLATFORM_ANDROID","onClick","right","IS_PLATFORM_IOS","title","onClose","photos","style","color","React","Component","Home","location","events","fetchedUser","useState","setMessage","handleEventClick","name","group_id","connect","send","then","data","catch","error","joinGroup","listEvents","map","e","key","geometry","coords","className","defaultState","center","parseFloat","zoom","options","preset","App","activePanel","setUser","setLocation","size","popout","setPopout","setEvents","useEffect","a","sendPromise","user","subscribe","detail","type","schemeAttribute","document","createAttribute","value","scheme","body","attributes","setNamedItem","fetchData","available","lat","long","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.b8722887.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  UsersStack,\n  ModalRoot,\n  ModalPage,\n  ModalPageHeader,\n  HeaderButton,\n  List,\n  Cell,\n  InfoRow,\n  IS_PLATFORM_ANDROID,\n  IS_PLATFORM_IOS\n} from '@vkontakte/vkui';\n\nimport Icon24Cancel from '@vkontakte/icons/dist/24/cancel';\nimport Icon24Dismiss from '@vkontakte/icons/dist/24/dismiss';\n\nclass Modal extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      activeModal: 'modal-page-1',\n      modalHistory: []\n    };\n\n    this.modalBack = () => {\n      this.setActiveModal(this.state.modalHistory[this.state.modalHistory.length - 2]);\n    };\n  }\n\n  setActiveModal(activeModal) {\n    activeModal = activeModal || null;\n    let modalHistory = this.state.modalHistory ? [...this.state.modalHistory] : [];\n\n    if (activeModal === null) {\n      modalHistory = [];\n    } else if (modalHistory.indexOf(activeModal) !== -1) {\n      modalHistory = modalHistory.splice(0, modalHistory.indexOf(activeModal) + 1);\n    } else {\n      modalHistory.push(activeModal);\n    }\n\n    this.setState({\n      activeModal,\n      modalHistory\n    });\n  };\n\n  handleClick = () => {\n    console.log('значение this:', this);\n  }\n\n  render() {\n    return (\n      <ModalRoot\n        id={this.props.id}\n        activeModal={this.state.activeModal}\n      >\n        <ModalPage\n          id='modal-page-1'\n          header={\n            <ModalPageHeader\n              left={IS_PLATFORM_ANDROID && <HeaderButton onClick={this.modalBack}><Icon24Cancel /></HeaderButton>}\n              right={IS_PLATFORM_IOS && <HeaderButton onClick={this.modalBack}><Icon24Dismiss /></HeaderButton>}\n            >\n              {this.props.title}\n            </ModalPageHeader>\n          }\n          onClose={this.modalBack}\n        >\n        <List>\n          <Cell>\n            <InfoRow title=\"Место\">\n              Казань Экспо\n            </InfoRow>\n          </Cell>\n          <Cell>\n            <InfoRow title=\"Когда?\">\n              12 января 13:42\n            </InfoRow>\n          </Cell>\n          <UsersStack\n            photos={[\n              'https://sun9-19.userapi.com/c851232/v851232757/fb949/4rDdDHqGglQ.jpg?ava=1',\n              'https://sun9-3.userapi.com/c851536/v851536176/a9b1d/xdPOltpVQRI.jpg?ava=1',\n              'https://sun9-21.userapi.com/c851416/v851416327/be840/bnUHAblZoBY.jpg?ava=1'\n            ]}\n            style={{ color: \"#fff\" }}\n          >\n            Эти товарищи тоже идут!\n          </UsersStack>\n        </List>\n      </ModalPage>\n    </ModalRoot>\n    );\n  }\n}\n\nModal.propTypes = {\n  id: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired\n};\n\nexport default Modal;\n","import React, { useState, useEffect } from 'react';\nimport connect from '@vkontakte/vk-connect';\nimport PropTypes from 'prop-types';\n\nimport {\n  YMaps,\n  Map,\n  Placemark\n} from 'react-yandex-maps';\n\nimport Modal from './Modal';\n\nimport './Home.css';\n\nconst Home = ({ id, location, fetchedUser, events }) => {\n\n  const [message, setMessage] = useState('ты ничего не нажал');\n\n  const joinGroup = (group_id) => {\n    connect\n      .send(\"VKWebAppJoinGroup\", {\"group_id\": group_id})\n      .then(data => {\n        console.log('data', data)\n      })\n      .catch(error => {\n        console.log('error', error)\n      });\n  }\n\n  const handleEventClick = (id, name, group_id) => {\n    setMessage('Вы записались на событие ' + name, '18:40')\n    joinGroup(group_id)\n  }\n\n  const listEvents = events.map((e) =>\n    <Placemark\n      key={'event-' + e.id}\n      geometry={e.coords}\n      onClick={() => handleEventClick(e.id, e.name, e.group_id)}\n    />\n  );\n\n  return (\n    <div id={id} className=\"main\">\n      <YMaps>\n        <Map className=\"map\"\n          defaultState={\n            {center: [\n              parseFloat(location[0]),\n              parseFloat(location[1])\n            ],\n            zoom: 9}\n          }\n        >\n          <Placemark\n            geometry={[parseFloat(location[0]), parseFloat(location[1])]}\n            options={{preset: 'islands#redCircleDotIcon'}}\n          />\n          {listEvents}\n\n        </Map>\n      </YMaps>\n      <Modal\n        id='modal-1'\n        title='Налить кофию.'\n      />\n    </div>\n  );\n}\n\nHome.propTypes = {\n  id: PropTypes.string.isRequired,\n  location: PropTypes.array.isRequired,\n  fetchedUser: PropTypes.shape({\n    photo_200: PropTypes.string,\n    first_name: PropTypes.string,\n    last_name: PropTypes.string,\n    city: PropTypes.shape({\n      title: PropTypes.string,\n    }),\n  }),\n};\n\nexport default Home;\n","import React, { useState, useEffect } from 'react';\nimport connect from '@vkontakte/vk-connect';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\n\nconst App = () => {\n  const [activePanel, setActivePanel] = useState('home');\n  const [fetchedUser, setUser] = useState(null);\n  const [location, setLocation] = useState([55.798, 49.106]);\n  const [popout, setPopout] = useState(<ScreenSpinner size='large' />);\n  const [events, setEvents] = useState([]);\n  const [token, setToken] = useState('');\n  \n  const fetchLocation = () => {\n    console.log(location)\n    connect\n      .sendPromise('VKWebAppGetGeodata')\n      .then(data => {\n        if (data.available == 1) {\n          console.log('accessed user location!')\n          setLocation([data.lat, data.long])\n        }\n        console.log('location', location)\n      })\n      .catch(error => {\n        console.log('error', error)\n      });\n  }\n\n  const getToken = () => {\n    connect\n      .sendPromise(\"VKWebAppGetAuthToken\", {\"app_id\": 7149958, \n                                            \"scope\": \"friends,groups\"})\n      .then(data=> {\n        console.log(data)\n        if (\"error_data\" in data) {\n          console.log('could not fetch token :(')\n        } else {\n          setToken(data.access_token)\n          console.log('fetched token', token)\n        }\n      })\n      .catch(error => {\n        console.log('error', error)\n      })\n  }\n\n  useEffect(() => {\n    connect.subscribe(({ detail: { type, data }}) => {\n      if (type === 'VKWebAppUpdateConfig') {\n        const schemeAttribute = document.createAttribute('scheme');\n        schemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n        document.body.attributes.setNamedItem(schemeAttribute);\n      }\n    });\n    setPopout(null);\n    async function fetchData() {\n      const user = await connect.sendPromise('VKWebAppGetUserInfo');\n      setUser(user);\n      setPopout(null);\n    }\n    fetchData();\n    fetchLocation();\n    // getToken();\n\n    setEvents([\n      {\n        'coords': [55.766059, 49.304057],\n        'name': 'Помочь зооботсаду',\n        'start': '2019-10-05 09:00',\n        'end': '2019-10-05 13:00',\n        'aim': 'Содействие в поддержании благополучия экспонируемых животных',\n        'description': 'Необходима помощь во время сезонных работ, помощь посетителям в ориентировании на территории, консультирование',\n        'requirements': ['Хорошо знать территорию зооботсада', 'Готовность выполнять любую из перечисленных задач'],\n        'type': 'Zoo',\n        'reward': 'Бесплатное посещение экскурсий, а также памятные сувениры',\n        'photo': 'botsad.svg',\n        'group_id': '187013907'\n      }\n    ]);\n\n  }, []);\n\n  // const go = e => {\n  //   setActivePanel(e.currentTarget.dataset.to);\n  // };\n\n  return (\n    <View activePanel={activePanel} popout={popout}>\n      <Home id='home' location={location} fetchedUser={fetchedUser} events={events}/>\n    </View>\n  );\n}\n\nexport default App;\n","import 'core-js/features/map';\nimport 'core-js/features/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vk-connect';\nimport App from './App';\n// import registerServiceWorker from './sw';\n\n// Init VK  Mini App\nconnect.send('VKWebAppInit');\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT\n// registerServiceWorker();\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}