{"version":3,"sources":["panels/Home.js","App.js","index.js"],"names":["Home","id","location","fetchedUser","className","defaultState","center","zoom","geometry","options","preset","App","useState","activePanel","setUser","setLocation","size","popout","setPopout","setEvents","useEffect","a","connect","sendPromise","user","send","subscribe","detail","type","data","schemeAttribute","document","createAttribute","value","scheme","body","attributes","setNamedItem","fetchData","then","lat","lon","console","log","catch","error","ReactDOM","render","getElementById"],"mappings":"wlBAmCeA,G,OA3BF,SAAC,GAAD,IAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,SAAP,EAAiBC,YAAjB,OACX,kBAAC,IAAD,CAAOF,GAAIA,GACT,kBAAC,IAAD,kFACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKG,UAAU,MAAMC,aAAc,CAACC,OAAQJ,EAAUK,KAAM,IAC1D,kBAAC,IAAD,CACEC,SAAUN,EACVO,QAAS,CAACC,OAAQ,mCCmDbC,EA1DH,WAAO,IAAD,EACsBC,mBAAS,QAD/B,mBACTC,EADS,aAEeD,mBAAS,OAFxB,mBAETT,EAFS,KAEIW,EAFJ,OAGgBF,mBAAS,CAAC,OAAQ,SAHlC,mBAGTV,EAHS,KAGCa,EAHD,OAIYH,mBAAS,kBAAC,IAAD,CAAeI,KAAK,WAJzC,mBAITC,EAJS,KAIDC,EAJC,OAKYN,mBAAS,IALrB,mBAKDO,GALC,WAmBhBC,qBAAU,WAAM,4CASd,4BAAAC,EAAA,sEACqBC,IAAQC,YAAY,uBADzC,cACQC,EADR,gBAEoBF,IAAQG,OAF5B,cAGEX,EAAQU,GACRN,EAAU,MAJZ,4CATc,sBACdI,IAAQI,WAAU,YAAgC,IAAD,IAA5BC,OAAUC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,KACnC,GAAa,yBAATD,EAAiC,CACnC,IAAME,EAAkBC,SAASC,gBAAgB,UACjDF,EAAgBG,MAAQJ,EAAKK,OAASL,EAAKK,OAAS,eACpDH,SAASI,KAAKC,WAAWC,aAAaP,OAG1CZ,EAAU,MARI,mCAedoB,GA1BAhB,IACGC,YAAY,sBACZgB,MAAK,SAAAV,GACJd,EAAY,CAACc,EAAKW,IAAKX,EAAKY,MAC5BC,QAAQC,IAAI,WAAYzC,MAEzB0C,OAAM,SAAAC,GACLH,QAAQC,IAAI,QAASE,MAsBzB1B,EAAU,CACR,CACE,OAAU,CAAC,WAAY,YACvB,KAAQ,uEACR,YAAe,wFAIlB,IAMH,OACE,kBAAC,IAAD,CAAMN,YAAaA,EAAaI,OAAQA,GACtC,kBAAC,EAAD,CAAMhB,GAAG,OAAOC,SAAUA,EAAUC,YAAaA,MCpDvDmB,IAAQG,KAAK,gBAQbqB,IAASC,OAAO,kBAAC,EAAD,MAAShB,SAASiB,eAAe,U","file":"static/js/main.afcd5939.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport { YMaps, Map, Placemark } from 'react-yandex-maps';\n\nimport './Home.css';\n\nconst Home = ({ id, location, fetchedUser }) => (\n  <Panel id={id}>\n    <PanelHeader>Карта событий</PanelHeader>\n    <YMaps>\n      <Map className=\"map\" defaultState={{center: location, zoom: 9}}>\n        <Placemark\n          geometry={location}\n          options={{preset: 'islands#redCircleDotIcon'}}\n        />\n      </Map>\n    </YMaps>\n  </Panel>\n);\n\nHome.propTypes = {\n  id: PropTypes.string.isRequired,\n  location: PropTypes.arrayOf(PropTypes.number).isRequired,\n  fetchedUser: PropTypes.shape({\n    photo_200: PropTypes.string,\n    first_name: PropTypes.string,\n    last_name: PropTypes.string,\n    city: PropTypes.shape({\n      title: PropTypes.string,\n    }),\n  }),\n};\n\nexport default Home;","import React, { useState, useEffect } from 'react';\nimport connect from '@vkontakte/vk-connect';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\n\nconst App = () => {\n  const [activePanel, setActivePanel] = useState('home');\n  const [fetchedUser, setUser] = useState(null);\n  const [location, setLocation] = useState([55.798, 49.106]);\n  const [popout, setPopout] = useState(<ScreenSpinner size='large' />);\n  const [events, setEvents] = useState([]);\n  \n  const fetchLocation = () => {\n    connect\n      .sendPromise('VKWebAppGetGeodata')\n      .then(data => {\n        setLocation([data.lat, data.lon])\n        console.log('location', location)\n      })\n      .catch(error => {\n        console.log('error', error)\n      });\n  }\n\n  useEffect(() => {\n    connect.subscribe(({ detail: { type, data }}) => {\n      if (type === 'VKWebAppUpdateConfig') {\n        const schemeAttribute = document.createAttribute('scheme');\n        schemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n        document.body.attributes.setNamedItem(schemeAttribute);\n      }\n    });\n    setPopout(null);\n    async function fetchData() {\n      const user = await connect.sendPromise('VKWebAppGetUserInfo');\n      const loc = await connect.send()\n      setUser(user);\n      setPopout(null);\n    }\n    fetchData();\n    fetchLocation();\n\n    setEvents([\n      {\n        'coords': [55.6105863, 49.2864581],\n        'name': 'Мероприятие 1',\n        'description': 'Уехать в Москву'\n      }\n    ]);\n\n  }, []);\n\n  const go = e => {\n    setActivePanel(e.currentTarget.dataset.to);\n  };\n\n  return (\n    <View activePanel={activePanel} popout={popout}>\n      <Home id='home' location={location} fetchedUser={fetchedUser}/>\n    </View>\n  );\n}\n\nexport default App;\n","import 'core-js/features/map';\nimport 'core-js/features/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vk-connect';\nimport App from './App';\n// import registerServiceWorker from './sw';\n\n// Init VK  Mini App\nconnect.send('VKWebAppInit');\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT\n// registerServiceWorker();\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}