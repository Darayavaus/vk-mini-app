{"version":3,"sources":["panels/Modal.js","panels/Home.js","App.js","index.js"],"names":["Modal","props","state","modalHistory","modalBack","setActiveModal","length","console","log","onClose","activeModal","this","indexOf","splice","push","setState","id","header","left","IS_PLATFORM_ANDROID","onClick","right","IS_PLATFORM_IOS","event","title","start","end","aim","group_id","photos","size","count_cur","React","Component","Home","location","events","fetchedUser","token","emptyEvent","useState","currentEvent","setCurrentEvent","handleEventClick","params","v","access_token","parseInt","connect","sendPromise","then","data","response","count","curr_e","active_m","catch","error","getGroupMembers","listEvents","map","e","idx","key","geometry","coords","options","preset","icon_type","className","defaultState","center","parseFloat","zoom","App","activePanel","setUser","setLocation","popout","setPopout","setEvents","setToken","useEffect","a","user","subscribe","detail","type","schemeAttribute","document","createAttribute","value","scheme","body","attributes","setNamedItem","fetchData","available","lat","long","send","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.521afdc4.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  UsersStack,\n  ModalRoot,\n  ModalPage,\n  ModalPageHeader,\n  HeaderButton,\n  List,\n  Cell,\n  InfoRow,\n  IS_PLATFORM_ANDROID,\n  IS_PLATFORM_IOS\n} from '@vkontakte/vkui';\n\nimport Icon24Cancel from '@vkontakte/icons/dist/24/cancel';\nimport Icon24Dismiss from '@vkontakte/icons/dist/24/dismiss';\n\nclass Modal extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      // activeModal: null,\n      modalHistory: []\n    };\n    this.modalBack = () => {\n      this.setActiveModal(this.state.modalHistory[this.state.modalHistory.length - 2]);\n      console.log('closing!')\n      this.props.onClose()\n    };\n  }\n\n  setActiveModal(activeModal) {\n    activeModal = activeModal || null;\n    let modalHistory = this.state.modalHistory ? [...this.state.modalHistory] : [];\n\n    if (activeModal === null) {\n      modalHistory = [];\n    } else if (modalHistory.indexOf(activeModal) !== -1) {\n      modalHistory = modalHistory.splice(0, modalHistory.indexOf(activeModal) + 1);\n    } else {\n      modalHistory.push(activeModal);\n    }\n\n    this.setState({\n      // activeModal,\n      modalHistory\n    });\n  };\n\n  render() {\n    return (\n      <ModalRoot\n        id='modal-1'\n        activeModal={this.props.activeModal}\n      >\n        <ModalPage\n          id='modal-page-1'\n          header={\n            <ModalPageHeader\n              left={IS_PLATFORM_ANDROID && <HeaderButton onClick={this.modalBack}><Icon24Cancel /></HeaderButton>}\n              right={IS_PLATFORM_IOS && <HeaderButton onClick={this.modalBack}><Icon24Dismiss /></HeaderButton>}\n            >\n              {this.props.event.title}\n            </ModalPageHeader>\n          }\n          onClose={this.modalBack}\n        >\n        <List>\n          <Cell>\n            <InfoRow title=\"Когда?\">\n              {this.props.event.start} - {this.props.event.end}\n            </InfoRow>\n          </Cell>\n          <Cell>\n            <InfoRow title=\"Что там делать?\">\n              {this.props.event.aim}\n            </InfoRow>\n          </Cell>\n          <Cell>\n            <InfoRow title=\"Чат группы\">\n              { this.props.event.group_id }\n            </InfoRow>\n          </Cell>\n          <Cell>\n            <UsersStack\n              photos={[\n                'https://sun9-1.userapi.com/c850624/v850624456/9f63e/c2_IbBit7I8.jpg?ava=1',\n                'https://sun9-6.userapi.com/c851528/v851528416/e0360/1UfQ8aSIGVA.jpg?ava=1'\n              ]}\n              size=\"m\"\n            >{this.props.event.count_cur} пойдут</UsersStack>\n          </Cell>\n        </List>\n      </ModalPage>\n    </ModalRoot>\n    );\n  }\n}\n\nexport default Modal;\n","import React, { useState, useEffect } from 'react';\nimport connect from '@vkontakte/vk-connect';\nimport PropTypes from 'prop-types';\n\nimport {\n  YMaps,\n  Map,\n  Placemark\n} from 'react-yandex-maps';\n\nimport Modal from './Modal';\n\nimport './Home.css';\n\nconst Home = ({ id, location, fetchedUser, events, token }) => {\n\n  const emptyEvent = {\n    'coords': [1, 1],\n    'title': 'Пусто',\n    'organizer': 'Пусто',\n    'start': 'Пусто',\n    'end': 'Пусто',\n    'aim': 'Пусто',\n    'description': 'Пусто',\n    'requirements': [],\n    'icon_type': 'islands#blueZooIcon',\n    'reward': '',\n    'photo': 'botsad.svg',\n    'group_id': '1',\n    'count_cur': 1,\n    'count_end': 1\n  }\n\n  const [currentEvent, setCurrentEvent] = useState(\n    {\n      event: emptyEvent,\n      activeModal: null\n    }\n  );\n\n\n  const joinGroup = (group_id) => {\n    connect\n      .sendPromise(\"VKWebAppJoinGroup\", {\"group_id\": parseInt(group_id)})\n      .then(data => {\n        console.log('data', data)\n      })\n      .catch(error => {\n        console.log('error', error)\n      });\n  }\n\n\n  const getGroupMembers = (group_id) => {\n    let params = {\n      v: '5.101',\n      access_token: token,\n      group_id: parseInt(group_id)\n    }\n    connect\n      .sendPromise(\"VKWebAppCallAPIMethod\", {\"method\": \"groups.getMembers\", \n                                             \"params\": params})\n      .then(data => {\n        console.log('group count:', data.response.count)\n        let curr_e = currentEvent.event\n        let active_m = currentEvent.activeModal\n        curr_e.count_cur = data.response.count\n        setCurrentEvent({event:curr_e, activeModal: active_m})\n      })\n      .catch(error => {\n        console.log('error', error)\n      });\n  }\n\n  const handleEventClick = (event) => {\n    // joinGroup(group_id)\n    getGroupMembers(event.group_id)\n    console.log('clicked')\n    setCurrentEvent(\n      {\n        event: event,\n        activeModal: 'modal-page-1'\n      }\n    )\n    console.log(currentEvent)\n  }\n\n  const listEvents = events.map((e, idx) =>\n    <Placemark\n      key={'event-' + idx}\n      geometry={e.coords}\n      options={{preset: e.icon_type}}\n      onClick={() => handleEventClick(e)}\n    />\n  );\n\n  const onCloseModal = () => {\n    setCurrentEvent(\n      {\n        event: emptyEvent,\n        activeModal: null\n      }\n    )\n  }\n\n  return (\n    <div id={id} className=\"main\">\n      <YMaps>\n        <Map className=\"map\"\n          defaultState={\n            {center: [\n              parseFloat(location[0]),\n              parseFloat(location[1])\n            ],\n            zoom: 9}\n          }\n        >\n          <Placemark\n            geometry={[parseFloat(location[0]), parseFloat(location[1])]}\n            options={{preset: 'islands#redCircleDotIcon'}}\n          />\n          {listEvents}\n        </Map>\n      </YMaps>\n      <Modal\n        event={currentEvent.event}\n        activeModal={currentEvent.activeModal}\n        onClose={onCloseModal}\n      />\n    </div>\n  );\n}\n\nexport default Home;\n","import React, { useState, useEffect } from 'react';\nimport connect from '@vkontakte/vk-connect';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\n\nconst App = () => {\n  const [activePanel, setActivePanel] = useState('home');\n  const [fetchedUser, setUser] = useState(null);\n  const [location, setLocation] = useState([55.798, 49.106]);\n  const [popout, setPopout] = useState(<ScreenSpinner size='large' />);\n  const [events, setEvents] = useState([]);\n  const [token, setToken] = useState('');\n  \n  const fetchLocation = () => {\n    console.log(location)\n    connect\n      .sendPromise('VKWebAppGetGeodata')\n      .then(data => {\n        if (data.available == 1) {\n          console.log('accessed user location!')\n          setLocation([data.lat, data.long])\n        }\n        console.log('location', location)\n      })\n      .catch(error => {\n        console.log('error', error)\n      });\n  }\n\n  const getToken = () => {\n    connect\n      .sendPromise(\"VKWebAppGetAuthToken\",\n        {\n          \"app_id\": 7149958,\n          \"scope\": \"friends,groups\"\n        }\n      )\n      .then(data=> {\n        console.log(data)\n        if (\"error_data\" in data) {\n          console.log('could not fetch token :(')\n        } else {\n          setToken(data.access_token)\n          console.log('fetched token!')\n        }\n      })\n      .catch(error => {\n        console.log('error', error)\n      })\n  }\n\n  useEffect(() => {\n    connect.subscribe(({ detail: { type, data }}) => {\n      if (type === 'VKWebAppUpdateConfig') {\n        const schemeAttribute = document.createAttribute('scheme');\n        schemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n        document.body.attributes.setNamedItem(schemeAttribute);\n      }\n    });\n    setPopout(null);\n    async function fetchData() {\n      const user = await connect.sendPromise('VKWebAppGetUserInfo');\n      setUser(user);\n      setPopout(null);\n    }\n    fetchData();\n    fetchLocation();\n    getToken();\n\n    setEvents([\n      {\n        'coords': [55.766059, 49.1308083],\n        'title': 'Помочь зооботсаду',\n        'organizer': 'Казанский зооботанический сад',\n        'start': '2019-10-05 09:00',\n        'end': '2019-10-05 13:00',\n        'aim': 'Содействие в поддержании благополучия экспонируемых животных',\n        'description': 'Необходима помощь во время сезонных работ, помощь посетителям в ориентировании на территории, консультирование',\n        'requirements': ['Хорошо знать территорию зооботсада', 'Готовность выполнять любую из перечисленных задач'],\n        'icon_type': 'islands#blueZooIcon',\n        'reward': 'Бесплатное посещение экскурсий, а также памятные сувениры',\n        'photo': 'botsad.svg',\n        'group_id': '187013907',\n        'count_cur': 34,\n        'count_end': 50\n      },\n      {\n        'coords': [55.821002, 49.1586594],\n        'title': 'Помочь с техникой',\n        'organizer': 'Казань Арена',\n        'start': '2019-10-06 10:00',\n        'end': '2019-10-06 16:00',\n        'aim': 'Успешное проведение спортивного мероприятия',\n        'description': 'Необходима помощь волонтеров в организации обеспечения коммуникаций и телерадиовещания',\n        'requirements': ['Возраст от 18 лет', 'Опыт волонтерской работы на спортивных мероприятиях'],\n        'icon_type': 'islands#blueRunIcon',\n        'reward': 'Бесплатное посещение матча',\n        'photo': 'kazan-arena.svg',\n        'group_id': '187023316',\n        'count_cur': 27,\n        'count_end': 100\n      },\n      {\n        'coords': [55.6122512, 49.2959574],\n        'title': 'Прибрать за собой',\n        'organizer': 'Цифровой Прорыв',\n        'start': '2019-09-29 16:00',\n        'end': '2019-09-29 21:00',\n        'aim': 'Помочь и отбрагодарить организаторов хакатона',\n        'description': 'Требуется провести уборку на своем рабочем месте после завершения хакатона',\n        'requirements': ['Умение работать в команде'],\n        'icon_type': 'islands#blueStarIcon',\n        'reward': 'Благодарность',\n        'photo': 'cp.svg',\n        'group_id': '187024041',\n        'count_cur': 3250,\n        'count_end': 3300\n      },\n      {\n        'coords': [55.791230, 49.102772],\n        'title': 'Отпраздновать победу',\n        'organizer': 'Фонд побед',\n        'start': '2019-09-29 21:00',\n        'end': '2019-09-29 23:00',\n        'aim': 'Весело провести время',\n        'description': 'Необходимо отдохнуть и поздравить победителей',\n        'requirements': ['Умение работать в команде'],\n        'icon_type': 'islands#blueFoodIcon',\n        'reward': 'Вы перестанете чувствовать усталость',\n        'photo': 'bar.svg',\n        'group_id': '187028879',\n        'count_cur': 3,\n        'count_end': 100\n      }\n    ]);\n\n    console.log('00:05')\n\n  }, []);\n\n  return (\n    <View activePanel={activePanel} popout={popout}>\n      <Home id='home' \n            location={location} \n            fetchedUser={fetchedUser} \n            events={events}\n            token={token}/>\n    </View>\n  );\n}\n\nexport default App;\n","import 'core-js/features/map';\nimport 'core-js/features/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vk-connect';\nimport App from './App';\n// import registerServiceWorker from './sw';\n\n// Init VK  Mini App\nconnect.send('VKWebAppInit');\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT\n// registerServiceWorker();\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}