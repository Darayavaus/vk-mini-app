{"version":3,"sources":["panels/Home.js","App.js","index.js"],"names":["Home","id","location","events","fetchedUser","useState","message","setMessage","handleEventClick","name","group_id","connect","send","joinGroup","listEvents","map","e","key","geometry","coords","onClick","className","defaultState","center","parseFloat","zoom","options","preset","photos","style","color","App","activePanel","setUser","setLocation","size","popout","setPopout","setEvents","useEffect","a","sendPromise","user","subscribe","detail","type","data","schemeAttribute","document","createAttribute","value","scheme","body","attributes","setNamedItem","fetchData","console","log","then","available","lat","long","catch","error","ReactDOM","render","getElementById"],"mappings":"qmBAwFeA,G,OAvEF,SAAC,GAA2C,IAAzCC,EAAwC,EAAxCA,GAAIC,EAAoC,EAApCA,SAAuBC,GAAa,EAA1BC,YAA0B,EAAbD,QAAa,EAExBE,mBAAS,iGAFe,mBAE/CC,EAF+C,KAEtCC,EAFsC,KAShDC,EAAmB,SAACC,EAAMC,GAC9BH,EAAW,qIAA8BE,GANzB,SAACC,GACjBC,IACGC,KAAK,oBAAqB,CAAC,SAAYF,IAK1CG,CAAUH,IAGNI,EAAaX,EAAOY,KAAI,SAACC,GAAD,OAC5B,kBAAC,IAAD,CACEC,IAAK,SAAWD,EAAEf,GAClBiB,SAAUF,EAAEG,OACZC,QAAS,kBAAMZ,EAAiBQ,EAAEP,KAAMO,EAAEN,gBAI9C,OACE,yBAAKT,GAAIA,EAAIoB,UAAU,QACrB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKA,UAAU,MACbC,aACE,CAACC,OAAQ,CACPC,WAAWtB,EAAS,IACpBsB,WAAWtB,EAAS,KAEtBuB,KAAM,IAGR,kBAAC,IAAD,CACEP,SAAU,CAACM,WAAWtB,EAAS,IAAKsB,WAAWtB,EAAS,KACxDwB,QAAS,CAACC,OAAQ,8BAEnBb,IAIL,kBAAC,IAAD,CAAKO,UAAU,4BACb,yBAAKA,UAAU,sBACb,kBAAC,IAAD,CACEO,OAAQ,CACN,6EACA,4EACA,8EAEFC,MAAO,CAAEC,MAAO,SAChBxB,EAPF,iBCoCKyB,EAzFH,WAAO,IAAD,EACsB1B,mBAAS,QAD/B,mBACT2B,EADS,aAEe3B,mBAAS,OAFxB,mBAETD,EAFS,KAEI6B,EAFJ,OAGgB5B,mBAAS,CAAC,OAAQ,SAHlC,mBAGTH,EAHS,KAGCgC,EAHD,OAIY7B,mBAAS,kBAAC,IAAD,CAAe8B,KAAK,WAJzC,mBAITC,EAJS,KAIDC,EAJC,OAKYhC,mBAAS,IALrB,mBAKTF,EALS,KAKDmC,EALC,OAMUjC,mBAAS,IANnB,6BAkFhB,OAxCAkC,qBAAU,WAAM,4CASd,4BAAAC,EAAA,sEACqB7B,IAAQ8B,YAAY,uBADzC,OACQC,EADR,OAEET,EAAQS,GACRL,EAAU,MAHZ,4CATc,sBACd1B,IAAQgC,WAAU,YAAgC,IAAD,IAA5BC,OAAUC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,KACnC,GAAa,yBAATD,EAAiC,CACnC,IAAME,EAAkBC,SAASC,gBAAgB,UACjDF,EAAgBG,MAAQJ,EAAKK,OAASL,EAAKK,OAAS,eACpDH,SAASI,KAAKC,WAAWC,aAAaP,OAG1CV,EAAU,MARI,mCAcdkB,GA/CAC,QAAQC,IAAIvD,GACZS,IACG8B,YAAY,sBACZiB,MAAK,SAAAZ,GACkB,GAAlBA,EAAKa,YACPH,QAAQC,IAAI,2BACZvB,EAAY,CAACY,EAAKc,IAAKd,EAAKe,QAE9BL,QAAQC,IAAI,WAAYvD,MAEzB4D,OAAM,SAAAC,GACLP,QAAQC,IAAI,QAASM,MAwCzBzB,EAAU,CACR,CACE,OAAU,CAAC,UAAW,WACtB,KAAQ,oGACR,MAAS,mBACT,IAAO,mBACP,IAAO,kVACP,YAAe,ilBACf,aAAgB,CAAC,gMAAsC,iRACvD,KAAQ,MACR,OAAU,sTACV,MAAS,aACT,SAAY,iBAIf,IAOD,kBAAC,IAAD,CAAMN,YAAaA,EAAaI,OAAQA,GACtC,kBAAC,EAAD,CAAMnC,GAAG,OAAOC,SAAUA,EAAUE,YAAaA,EAAaD,OAAQA,MCnF5EQ,IAAQC,KAAK,gBAQboD,IAASC,OAAO,kBAAC,EAAD,MAASjB,SAASkB,eAAe,W","file":"static/js/main.13468bf5.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport connect from '@vkontakte/vk-connect';\nimport PropTypes from 'prop-types';\n\nimport {\n  Div,\n  UsersStack\n} from '@vkontakte/vkui';\n\nimport {\n  YMaps,\n  Map,\n  Placemark\n} from 'react-yandex-maps';\n\nimport './Home.css';\n\nconst Home = ({ id, location, fetchedUser, events }) => {\n\n  const [message, setMessage] = useState('ты ничего не нажал');\n\n  const joinGroup = (group_id) => {\n    connect\n      .send(\"VKWebAppJoinGroup\", {\"group_id\": group_id});\n  }\n\n  const handleEventClick = (name, group_id) => {\n    setMessage('Вы записались на событие ' + name)\n    joinGroup(group_id)\n  }\n\n  const listEvents = events.map((e) =>\n    <Placemark\n      key={'event-' + e.id}\n      geometry={e.coords}\n      onClick={() => handleEventClick(e.name, e.group_id)}\n    />\n  );\n\n  return (\n    <div id={id} className=\"main\">\n      <YMaps>\n        <Map className=\"map\"\n          defaultState={\n            {center: [\n              parseFloat(location[0]),\n              parseFloat(location[1])\n            ],\n            zoom: 9}\n          }\n        >\n          <Placemark\n            geometry={[parseFloat(location[0]), parseFloat(location[1])]}\n            options={{preset: 'islands#redCircleDotIcon'}}\n          />\n          {listEvents}\n\n        </Map>\n      </YMaps>\n      <Div className=\"event-short-info-wrapper\">\n        <div className=\"event-info-content\">\n          <UsersStack\n            photos={[\n              'https://sun9-19.userapi.com/c851232/v851232757/fb949/4rDdDHqGglQ.jpg?ava=1',\n              'https://sun9-3.userapi.com/c851536/v851536176/a9b1d/xdPOltpVQRI.jpg?ava=1',\n              'https://sun9-21.userapi.com/c851416/v851416327/be840/bnUHAblZoBY.jpg?ava=1'\n            ]}\n            style={{ color: \"#fff\" }}\n          >{message} - 18:00</UsersStack>\n        </div>\n      </Div>\n    </div>\n  );\n}\n\nHome.propTypes = {\n  id: PropTypes.string.isRequired,\n  location: PropTypes.array.isRequired,\n  fetchedUser: PropTypes.shape({\n    photo_200: PropTypes.string,\n    first_name: PropTypes.string,\n    last_name: PropTypes.string,\n    city: PropTypes.shape({\n      title: PropTypes.string,\n    }),\n  }),\n};\n\nexport default Home;\n","import React, { useState, useEffect } from 'react';\nimport connect from '@vkontakte/vk-connect';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\n\nconst App = () => {\n  const [activePanel, setActivePanel] = useState('home');\n  const [fetchedUser, setUser] = useState(null);\n  const [location, setLocation] = useState([55.798, 49.106]);\n  const [popout, setPopout] = useState(<ScreenSpinner size='large' />);\n  const [events, setEvents] = useState([]);\n  const [token, setToken] = useState('');\n  \n  const fetchLocation = () => {\n    console.log(location)\n    connect\n      .sendPromise('VKWebAppGetGeodata')\n      .then(data => {\n        if (data.available == 1) {\n          console.log('accessed user location!')\n          setLocation([data.lat, data.long])\n        }\n        console.log('location', location)\n      })\n      .catch(error => {\n        console.log('error', error)\n      });\n  }\n\n  const getToken = () => {\n    connect\n      .sendPromise(\"VKWebAppGetAuthToken\", {\"app_id\": 7149958, \n                                            \"scope\": \"friends,groups\"})\n      .then(data=> {\n        console.log(data)\n        if (\"error_data\" in data) {\n          console.log('could not fetch token :(')\n        } else {\n          setToken(data.access_token)\n          console.log('fetched token', token)\n        }\n      })\n      .catch(error => {\n        console.log('error', error)\n      })\n  }\n\n  useEffect(() => {\n    connect.subscribe(({ detail: { type, data }}) => {\n      if (type === 'VKWebAppUpdateConfig') {\n        const schemeAttribute = document.createAttribute('scheme');\n        schemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n        document.body.attributes.setNamedItem(schemeAttribute);\n      }\n    });\n    setPopout(null);\n    async function fetchData() {\n      const user = await connect.sendPromise('VKWebAppGetUserInfo');\n      setUser(user);\n      setPopout(null);\n    }\n    fetchData();\n    fetchLocation();\n    // getToken();\n\n    setEvents([\n      {\n        'coords': [55.766059, 49.304057],\n        'name': 'Помочь зооботсаду',\n        'start': '2019-10-05 09:00',\n        'end': '2019-10-05 13:00',\n        'aim': 'Содействие в поддержании благополучия экспонируемых животных',\n        'description': 'Необходима помощь во время сезонных работ, помощь посетителям в ориентировании на территории, консультирование',\n        'requirements': ['Хорошо знать территорию зооботсада', 'Готовность выполнять любую из перечисленных задач'],\n        'type': 'Zoo',\n        'reward': 'Бесплатное посещение экскурсий, а также памятные сувениры',\n        'photo': 'botsad.svg',\n        'group_id': '187013907'\n      }\n    ]);\n\n  }, []);\n\n  // const go = e => {\n  //   setActivePanel(e.currentTarget.dataset.to);\n  // };\n\n  return (\n    <View activePanel={activePanel} popout={popout}>\n      <Home id='home' location={location} fetchedUser={fetchedUser} events={events}/>\n    </View>\n  );\n}\n\nexport default App;\n","import 'core-js/features/map';\nimport 'core-js/features/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vk-connect';\nimport App from './App';\n// import registerServiceWorker from './sw';\n\n// Init VK  Mini App\nconnect.send('VKWebAppInit');\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT\n// registerServiceWorker();\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}